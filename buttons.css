/* buttons.css */

/* Общие стили для глянцевых кнопок */
.glossy-btn {
    width: 140px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: calc(var(--height) / 2); /* 50% от высоты */
    cursor: pointer; /* Меняем курсор на указатель при наведении на кнопку */
    font-size: 14px; /* Размер шрифта: 14 пикселей */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации для transform и box-shadow */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя тень (светлая) */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тень (тёмная) */
    margin-bottom: 0px; /* Отступ снизу: 0 пикселей */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.glossy-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.glossy-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.glossy-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.glossy-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.glossy-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}

/* Градиенты для кнопок */
.btn-color1 { background: linear-gradient(to bottom, #c8fa02, #2bab02); } /* Градиент от светло-зелёного к тёмно-зелёному */
.btn-color2 { background: linear-gradient(to bottom, #00c6ff, #0072ff); } /* Градиент от голубого к синему */
.btn-color3 { background: linear-gradient(to bottom, #fa0202, #ab0202); } /* Градиент от розового к красному */
.btn-color4 { background: linear-gradient(to bottom, #c302fa, #9d02ab); } /* Градиент от светло-зелёного к бирюзовому */
.btn-color5 { background: linear-gradient(to bottom, #ffcc00, #ff6f61); } /* Градиент от жёлтого к оранжевому */
.btn-color6 { background: linear-gradient(to bottom, #02fad5, #02a0ab ); } /* Градиент от светло-фиолетового к тёмно-фиолетовому */
.btn-color7 { background: linear-gradient(to bottom, #f089e5, #f56285 ); } /* Градиент от светло-красного к тёмно-красному */
.btn-color8 { background: linear-gradient(to bottom, #fa9702, #ab5602 ); } /* Градиент от светло-зелёного к ярко-зелёному */
.btn-color9 { background: linear-gradient(to bottom, #faf102, #a1ab02 ); } /* Градиент от голубого к синему */
.btn-color10 { background: linear-gradient(to bottom, #84bcd2, #725ce0 ); } /* Градиент от светло-розового к оранжевому */





/* Квадратные кнопки */
.square-btn {
    aspect-ratio: 1; /* Ширина всегда равна высоте */
    height: 50px; /* Начальная высота кнопки (можно изменять) */
    color: white; /* Цвет текста на кнопке: белый */
    border: none; /* Убираем границу у кнопки */
    border-radius: 10px; /* Закругляем углы кнопки */
    cursor: pointer; /* Меняем курсор на указатель при наведении на кнопку */
    font-size: 18px; /* Размер шрифта: 14 пикселей */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации для transform и box-shadow */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя тень (светлая) */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тень (тёмная) */
    margin-bottom: 0px; /* Отступ снизу: 0 пикселей */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.square-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: 0%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -0%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 180%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 60%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(180deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.square-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.square-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.square-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.square-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}

/* Градиенты для квадратных кнопок (можно использовать те же, что и для обычных кнопок) */
.square-btn.btn-color1 { background: linear-gradient(to bottom, #c8fa02, #2bab02); }
.square-btn.btn-color2 { background: linear-gradient(to bottom, #00c6ff, #0072ff); }
.square-btn.btn-color3 { background: linear-gradient(to bottom, #fa0202, #ab0202); }
.square-btn.btn-color4 { background: linear-gradient(to bottom, #c302fa, #9d02ab); }
.square-btn.btn-color5 { background: linear-gradient(to bottom, #ffcc00, #ff6f61); }
.square-btn.btn-color6 { background: linear-gradient(to bottom, #02fad5, #02a0ab); }
.square-btn.btn-color7 { background: linear-gradient(to bottom, #f089e5, #f56285); }
.square-btn.btn-color8 { background: linear-gradient(to bottom, #fa9702, #ab5602); }
.square-btn.btn-color9 { background: linear-gradient(to bottom, #faf102, #a1ab02); }
.square-btn.btn-color10 { background: linear-gradient(to bottom, #84bcd2, #725ce0); }







/* Стили для кнопок с автоматической шириной */
.auto-width-btn {
    width: fit-content; /* Ширина кнопки подстраивается под содержимое */
    min-width: 100px; /* Минимальная ширина кнопки */
    padding: 10px 20px; /* Внутренние отступы для текста */
    height: 47px; /* Высота кнопки */
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: 21px; /* Закругляем углы */
    cursor: pointer; /* Курсор в виде указателя */
    font-size: 14px; /* Размер шрифта */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя светлая тень */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тёмная тень */
}

/* Псевдоэлемент для кнопок с автоматической шириной */
.auto-width-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении для кнопок с автоматической шириной */
.auto-width-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.auto-width-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии для кнопок с автоматической шириной */
.auto-width-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.auto-width-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}



																						/* Кнопки для меню */
.menu-btn {
    width: 100%; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: calc(var(--height) / 2); /* 50% от высоты */
    cursor: pointer; /* Курсор в виде указателя */
    font-size: 14px; /* Размер шрифта */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации */
    box-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 1px 3px rgba(255, 255, 255, 0.6), /* Внутренняя светлая тень */
        inset 0 -1px 3px rgba(0, 0, 0, 0.3); /* Внутренняя тёмная тень */
    margin: 0px 0px 0px 0px; /* Отрицательный отступ снизу */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.menu-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.menu-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.menu-btn:hover {
    transform: translateY(-1px); /* При наведении кнопка слегка поднимается вверх на 1 пиксель */
    box-shadow: 
        0 3px 6px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 2px 4px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -2px 4px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.menu-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.menu-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}

/* Градиенты для кнопок меню */
.menu-btn.btn-color1 { background: linear-gradient(to bottom, #c8fa02, #2bab02); }
.menu-btn.btn-color2 { background: linear-gradient(to bottom, #00c6ff, #0072ff); }
.menu-btn.btn-color3 { background: linear-gradient(to bottom, #fa0202, #ab0202); }
.menu-btn.btn-color4 { background: linear-gradient(to bottom, #c302fa, #9d02ab); }
.menu-btn.btn-color5 { background: linear-gradient(to bottom, #ffcc00, #ff6f61); }
.menu-btn.btn-color6 { background: linear-gradient(to bottom, #02fad5, #02a0ab); }
.menu-btn.btn-color7 { background: linear-gradient(to bottom, #f089e5, #f56285); }
.menu-btn.btn-color8 { background: linear-gradient(to bottom, #fa9702, #ab5602); }
.menu-btn.btn-color9 { background: linear-gradient(to bottom, #faf102, #a1ab02); }
.menu-btn.btn-color10 { background: linear-gradient(to bottom, #84bcd2, #725ce0); }




																												/* Круглые кнопки */
.round-btn {
    width: 50px; /* Ширина кнопки */
    height: 50px; /* Высота кнопки */
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: 50%; /* Делаем кнопку круглой */
    cursor: pointer; /* Курсор в виде указателя */
    font-size: 18px; /* Размер шрифта */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя светлая тень */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тёмная тень */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.round-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.round-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.round-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.round-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.round-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}


																													/* next level */
.next-btn {
    width: 140px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: calc(var(--height) / 2); /* 50% от высоты */
    cursor: pointer; /* Меняем курсор на указатель при наведении на кнопку */
	background: linear-gradient(to bottom, #ffcc00, #ff6f61);
    font-size: 14px; /* Размер шрифта: 14 пикселей */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации для transform и box-shadow */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя тень (светлая) */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тень (тёмная) */
    margin-bottom: 0px; /* Отступ снизу: 0 пикселей */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.next-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.next-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.next-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.next-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.next-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}




																														/* Easy level */
.easy-btn {
    width: 140px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: calc(var(--height) / 2); /* 50% от высоты */
    cursor: pointer; /* Меняем курсор на указатель при наведении на кнопку */
	background: linear-gradient(to bottom, #c8fa02, #2bab02);
    font-size: 14px; /* Размер шрифта: 14 пикселей */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации для transform и box-shadow */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя тень (светлая) */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тень (тёмная) */
    margin-bottom: 0px; /* Отступ снизу: 0 пикселей */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.easy-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.easy-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.easy-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.easy-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.easy-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}



																														/* normal level */
.normal-btn {
    width: 140px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: calc(var(--height) / 2); /* 50% от высоты */
    cursor: pointer; /* Меняем курсор на указатель при наведении на кнопку */
	background: linear-gradient(to bottom, #00c6ff, #0072ff);;
    font-size: 14px; /* Размер шрифта: 14 пикселей */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации для transform и box-shadow */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя тень (светлая) */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тень (тёмная) */
    margin-bottom: 0px; /* Отступ снизу: 0 пикселей */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.normal-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.normal-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.normal-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.normal-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.normal-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}





																														/* hard level */
.hard-btn {
    width: 140px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white; /* Цвет текста */
    border: none; /* Убираем границу */
    border-radius: calc(var(--height) / 2); /* 50% от высоты */
    cursor: pointer; /* Меняем курсор на указатель при наведении на кнопку */
	background: linear-gradient(to bottom, #fa0202, #ab0202);
    font-size: 14px; /* Размер шрифта: 14 пикселей */
    font-weight: bold; /* Жирный шрифт */
    position: relative; /* Относительное позиционирование для псевдоэлементов */
    overflow: hidden; /* Скрываем содержимое, выходящее за границы кнопки */
    transition: transform 0.1s ease, box-shadow 0.1s ease; /* Плавные анимации для transform и box-shadow */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень вокруг кнопки */
        inset 0 2px 4px rgba(255, 255, 255, 0.6), /* Внутренняя тень (светлая) */
        inset 0 -2px 4px rgba(0, 0, 0, 0.3); /* Внутренняя тень (тёмная) */
    margin-bottom: 0px; /* Отступ снизу: 0 пикселей */
}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.hard-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.hard-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.hard-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.hard-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.hard-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}



																														/* next level */
.next-letter-btn {
    width: 200px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white;
    background: linear-gradient(to bottom, #ffcc00, #ff6f61);
    border: none;
    border-radius: 21px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    overflow: hidden;
    transition: transform 0.1s ease, box-shadow 0.1s ease;
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2),
        inset 0 2px 4px rgba(255, 255, 255, 0.6),
        inset 0 -2px 4px rgba(0, 0, 0, 0.3);
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */

}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.next-letter-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.next-letter-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.next-letter-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.next-letter-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.next-letter-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}


																														/* prev level */
.prev-btn {
    width: 200px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white;
    background: linear-gradient(to bottom, #ffcc00, #ff6f61);
    border: none;
    border-radius: 21px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    overflow: hidden;
    transition: transform 0.1s ease, box-shadow 0.1s ease;
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2),
        inset 0 2px 4px rgba(255, 255, 255, 0.6),
        inset 0 -2px 4px rgba(0, 0, 0, 0.3);
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */

}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.prev-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.prev-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.prev-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.prev-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.prev-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}


																															/* Chek level */
.chek-btn {
    width: 200px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white;
    background: linear-gradient(to bottom, #ffcc00, #ff6f61);
    border: none;
    border-radius: 21px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    overflow: hidden;
    transition: transform 0.1s ease, box-shadow 0.1s ease;
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2),
        inset 0 2px 4px rgba(255, 255, 255, 0.6),
        inset 0 -2px 4px rgba(0, 0, 0, 0.3);
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */

}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.chek-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.chek-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.chek-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.chek-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.chek-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}


																																/* DELETE */
.delete-btn {
    width: 200px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white;
    background: linear-gradient(to bottom, #fa0202, #ab0202);
    border: none;
    border-radius: 21px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    overflow: hidden;
    transition: transform 0.1s ease, box-shadow 0.1s ease;
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2),
        inset 0 2px 4px rgba(255, 255, 255, 0.6),
        inset 0 -2px 4px rgba(0, 0, 0, 0.3);
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */

}

/* Псевдоэлемент для создания "глянцевого" эффекта */
.delete-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.delete-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.delete-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.delete-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.delete-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}




                                                                                                                               /* RESTART */
.restart-btn {
    width: 200px; /* Ширина кнопки */
    --height: 46px; /* Высота кнопки */
    height: var(--height);
    color: white;
    background: linear-gradient(to bottom, #f089e5, #f56285);
    border: none;
    border-radius: 21px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    overflow: hidden;
    transition: transform 0.1s ease, box-shadow 0.1s ease;
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2),
        inset 0 2px 4px rgba(255, 255, 255, 0.6),
        inset 0 -2px 4px rgba(0, 0, 0, 0.3);
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */

}

.restart-btn::after {
    content: ''; /* Пустое содержимое (псевдоэлемент используется для визуального эффекта) */
    position: absolute; /* Абсолютное позиционирование внутри кнопки */
    top: -50%; /* Сдвигаем псевдоэлемент вверх на 50% от его высоты */
    left: -50%; /* Сдвигаем псевдоэлемент влево на 50% от его ширины */
    width: 200%; /* Ширина псевдоэлемента: 200% от ширины кнопки */
    height: 200%; /* Высота псевдоэлемента: 200% от высоты кнопки */
    background: linear-gradient(45deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.1)); /* Градиентный фон под углом 45 градусов */
    transform: rotate(45deg); /* Поворачиваем псевдоэлемент на 45 градусов */
    transition: opacity 0.3s ease; /* Плавное изменение прозрачности за 0.3 секунды */
    opacity: 0.5; /* Начальная прозрачность: 50% */
    z-index: 1; /* Порядок наложения: поверх кнопки, но под текстом */
}

/* Эффекты при наведении */
.restart-btn:hover::after {
    opacity: 0.8; /* При наведении прозрачность псевдоэлемента увеличивается до 80% */
}

.restart-btn:hover {
    transform: translateY(-2px); /* При наведении кнопка слегка поднимается вверх на 2 пикселя */
    box-shadow: 
        0 6px 12px rgba(0, 0, 0, 0.3), /* Тень становится больше и темнее */
        inset 0 3px 6px rgba(255, 255, 255, 0.8), /* Внутренняя светлая тень становится ярче */
        inset 0 -3px 6px rgba(0, 0, 0, 0.4); /* Внутренняя тёмная тень становится темнее */
}

/* Эффекты при нажатии */
.restart-btn:active::after {
    opacity: 0.3; /* При нажатии прозрачность псевдоэлемента уменьшается до 30% */
}

.restart-btn:active {
    transform: translateY(0); /* При нажатии кнопка возвращается в исходное положение */
    box-shadow: 
        0 4px 6px rgba(0, 0, 0, 0.2), /* Тень возвращается к исходному состоянию */
        inset 0 1px 3px rgba(255, 255, 255, 0.4), /* Внутренняя светлая тень становится менее яркой */
        inset 0 -1px 3px rgba(0, 0, 0, 0.5); /* Внутренняя тёмная тень становится темнее */
}


